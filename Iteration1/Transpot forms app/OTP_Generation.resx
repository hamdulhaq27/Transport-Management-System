<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBw8PERAPEA8QEBUQEA8QEBAVEg8PDhANFREXFxUSFRYY
        HSggGBolGxUVITEhJSkrLi4uGR8zODMsNygtMiv/2wBDAQoKCg4NDhsQEBs3Jh0dLS4tLS0tLSstKyst
        Ly0vLS0tLS0tMjUtLS0rKzAtKystLTc1Ky0rLi4tLS03LS0tKy3/wAARCADhAOEDASIAAhEBAxEB/8QA
        GwABAAIDAQEAAAAAAAAAAAAAAAMEAgUGAQf/xABAEAACAQIDBQIKBgkFAAAAAAAAAQIDEQQhMQUSQVFx
        YbEGExYiNIGRk9HSFDJUdKGzByNCRFJiweHwZGV1srT/xAAZAQEBAQEBAQAAAAAAAAAAAAAAAQMCBAX/
        xAAiEQEBAAIBBAMAAwAAAAAAAAAAAQIREgMhMUETUfAiYeH/2gAMAwEAAhEDEQA/APuIAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAYzklmwMgVZ4l8FbrqYrES7Gd8K55RcBHTqqXXkUtp0q+cqc7RUc4LKXa07fAmOO7q9kyz4zcm1ihjF
        OpOmk/MtnlZ8/wASyctgJVFK9JOTtmtU4vmdJhpScU5x3ZcY3vY063S4Xsy6HWvUndKADF6AAAAAAAAA
        AAAAAAAAAAAAAAAGp2jtNJShByUruLdrbtnnrqXcFi41Iq0lvWW9H9pPjkR7SwXjVG1k1JXfHc42LFHD
        Qh9WKWVrpK7Xa+JrbhwmvIznJJXZSqTcnd+pciTE1Lu3LvIRhj7Z5UABo5EWKWI4S9vxK4ObjKS6T4DC
        RpRai73d75epZFo18ZNaNoy8bL+JnOWNt3a6xsxmpF4GuZ6m1o2ifGvNsAU4YhrXPvLUJpq6ObjY6llZ
        AA5UAAAAAAAAAAAAAAAAB5KSSuynUrN9i5HUxtS3S1OpFav4lepiG8ll3kINJhI4uVACltjaUMLSlVmn
        LNRhBfWq1pfUpx7W/wCp25TY3GUqEHUrVI04r9qTsr8ktW+xGpj4Ruor4bBYvER4T3I0KclzTqNXXqPd
        mbEcpLFY21Wu84w1oYWOu5TjpfnLPNet7xsvaDReUFWGdfZ2MpLjKKp4iKXN7jubLZu06GKjv0KsaiWt
        rqUX/NF2cfWi2aja2w41ZePoy+j4mOcK8bJT/kqr9uL9vcOw24NbsPajxEJKcPF1qMvF4il/BV4Nc4yW
        afwNkQAAAM6U9139vQwBLNjYgxp6LojI87YAAAAAAAAAAAAAAABUxU7u3LvITKpq+rMT0YzUY3yAAoGh
        rR+kbRhB5wwNBVrf6qq7Qb6RV12s3xo9ken7U7Hs9er6MWe/39EbwAEAAAaHaEfEY7C11ksUp4St/NNL
        eoy65OPQ3xovCv8AcH/umC75G9LfEAAEAypQ3ml7ehiWcJHJvnkc5XUWTdWAR16qhGU3pFN/2PMLXVSE
        ZpWvw5Z2MdXW2qUAEAAAAAAAAAAAAABRrLzn17zAmxS87qiE3x8Mb5AD2KvkdDw0ex/T9q9dn/8AmIF4
        bYF8a3un8TWbP8J8LTxWOrSdTcxDwrp2p3l+ro7krq+WZ3MMu/b9uDtgc75a4HnW90/iPLXA863un8Sc
        MvodEDnfLXA863un8R5a4HnW90/iOGX0JfCv9w/5TA/9pG9OJ274T4Wv9F8W6n6nG4bETvT3f1VNvetn
        m89DZvw1wPOt7r+5bhlqdldGCPD1o1IQqRvu1IQnG6s92UVJXXB2ZIcIFzD/AFV6+8plvCvzejZn1PDr
        Dy1G1qFWOcqjnFyeWm63mk1x6kmyY11u2S8W3fztbPjE2mJw8akdyV7Np5OzyZIlbLkW9X+HHTR6ADEA
        AAAAAAAAABHXqqEXJ6JX/seYasqkIzStvJO2tuwpbXwKnF1IxbnFK1tWk9LetkmzsD4rPfk21nG/6tN8
        UjTjhw3vux5Z/JrXZJi9V0IDOvK8n7PYYHePhb5DKnquq7zEyp6rqu8tSPiFPRGRjT0RkfQUMqcHJqMY
        ylJ6RinKTXYlmY58NeC5vgdFtTHTwLeCwsnS8WofSK0bKtXxDinLztYwV7JI5t9QaCtSlB7s4Tg2rqMo
        yhJrmk1mYG/2TtmdaUcLjJSxFGtOMHvveq0akso1Kc3mmm1/mumxmHlRqVKUnd05zpt6XcZNX9driW71
        RCGAzofX9i+jYX7th/yYlwp7F9Gwv3bD/kxLh4KlCxhHqujK5NhPrPp/U5z8Lj5WwAYNQAAAAAAAAAAA
        AAMKsrJv/LmZBi9F1/oyybqXwqgA9DIMqeq6rvMTKnquq7yUj4hT0RkY09EZH0FLvhk+HXgdFtbAzxre
        NwsfG+MUHiKEbOtQxCilLzdZRdrpo50kw83GcJRlKL3o+dFuMrby4o5s9xW72TsedGUMVjIyw9GjJVLT
        W5VrVIu8adODzbbS/wA002LxMq1SpVkrOpOdRrVJyk3b1XsXfCebljMVvNy3a9RRu3LdjfRX0XYjWExm
        /wCVAMBnaPr+xfRsL92w/wCTEuFPYvo2F+7Yf8mJcPBUoWMItX0RXLtCFl+LOM72dYzukABi0AAAAAAA
        AAAAAAAjrxvF+0kAg1wJq9K2a07mQnol2xs0GVPVdV3mJ7F2afJoUfEaeiMjsI/o/qJel0/dT+Y98gKn
        2un7qfzHs+XD7Vxx7F2afJp+x3Ow8gKn2un7qfzDyAqfa6fup/MPlw+xzG1MUq1etWScVVqTmouzaTej
        Kp2PkBU+10/dT+YeQFT7XT91P5hOphPY44M7HyAqfa6fup/MZw/R3WlpiqfXxU/mF6uE9jq9i+jYX7th
        /wAmJcSJNnbPVKlRpSe86dKlTb+qm4QUbpcNC5GKWiseG9Sel4oKNC2b9SLABlbt3JoABFAAAAAAAAAA
        AAAAAACCeGT0y7icFlsSzar9GlzX4nn0aXNfiT1a8IfWnGPK7Sv7TUy2jevFqTVNea+EXdPzmurXsNcZ
        nl4TjF6VCXJPoyJqxsTGcE9UczqfaXBQBJVouPau7qRmku3GgAypwcnZet8gMqNPefZx+BaqTjBOTaSi
        rt8Ej2EUlZHrV9czHLLdaSajV1drR8ZBRl5l3vytlmsrX5M2kWnmszVVNlKVa+7anu3aTtefJW0XE2OH
        oRpx3YKyu3bN5vXU06nDU4sul8m7y/f4lABi3AAAAAAAAAAAAAAAAAAAAAFXGYCFXN3UkrKS1Xq4mho4
        SU5umrXi2pPgrO1zqCKnh4RcpRjZzd5PmzbDq3GWCDZ+DlSunUc07WVmlG3LNlwAyttu6BDLDxfYTAS6
        TW0Kw0e1ksUloegW2kmgAEUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/
        /9k=
</value>
  </data>
</root>