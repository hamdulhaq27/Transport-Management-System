<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxITEhUTExMVFRUVFRUWGBYVFRcWGRYXHBYWGBUXFRYb
        HSggGxolGxUVITEhJSkrLi8uGB8zODMsNygtLiv/2wBDAQoKCg4NDhsQEBsyJiAlLS0yLy0wLy0vLS0t
        LSstLy0tLS0vLi0tLS0tLS4tLS0tLS0tLS0tLS0tLS0tLS0tLS3/wAARCACWAVADAREAAhEBAxEB/8QA
        GwABAAIDAQEAAAAAAAAAAAAAAAUGAwQHAgH/xABMEAABAwIEAgYECgcGAwkAAAABAAIRAwQFEiExQVEG
        ImFxgZEHEzKhFEJSYnKSsbLB0RckM8LS4fAWI1NUgqIVNHNDRHSEk6O0w+L/xAAbAQEAAwEBAQEAAAAA
        AAAAAAAAAgMEAQUGB//EADcRAAIBAgQDBQcCBgMBAAAAAAABAgMRBBIhMUFRYRMycaGxBRQigZHB8BXh
        BkJSctHxIzOyYv/aAAwDAQACEQMRAD8A7igCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAg
        CAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAg
        CAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAg
        CAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAxOqEPA4GPsef3QpW0v8AnAjf4rfnEyqJIIAgCAIAgCAIAgCA
        IAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCA81Doe4rq3OPYqLar9NX8Pjn5vb84/W
        W+y/EeUpS6/U9215U1h7uG7ieHauShHkFVnwbNqlidUfGnsIn+ardKLJxxFRcSXscQbU02dy59xVE6bi
        bKVdT04m4qy8IAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAICpdN7y9p1bP4NUZTZUrmnU
        zhpnqmp1iQYZkp1pIg7eEkkcZm/SDhf+dpeZ/JT7GpyOZ48z7+kHC/8AO0vM/knY1OQzx5j9IOF/52l5
        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
</value>
  </data>
</root>